/*            //time on foot between source|destination and all tramway stations
            source = new Vertex("Current");
            destination = new Vertex("Destination");
            g.addVertex(source);
            g.addVertex(destination);
            for (int compteur = 0; compteur < stationsTramway.size(); compteur++) {
                time = (int) Math.round((fetchTime(src, stationsTramway.get(compteur).coordonnees) * 60));
                g.addEdge(source, g.getVertices().get(compteur), time);
                time = (int) Math.round((fetchTime(dst, stationsTramway.get(compteur).coordonnees) * 60));
                g.addEdge(destination, g.getVertices().get(compteur), time);
            }*/


A03 et A03BIS
            /*
            source = new Vertex("Current");
            destination = new Vertex("Destination");
            g.addVertex(source);
            g.addVertex(destination);
            for (int compteur = 0; compteur < stationsBus3.size(); compteur++) {
                time = (int) Math.round((fetchTime(src, stationsBus3.get(compteur).coordonnees) * 60));
                g.addEdge(source, g.getVertices().get(compteur), time);
                time = (int) Math.round((fetchTime(dst, stationsBus3.get(compteur).coordonnees) * 60));
                g.addEdge(destination, g.getVertices().get(compteur), time);
            }

            for (int compteur = stationsBus3.size(); compteur < stationsBus3.size() + stationsBus3bis.size(); compteur++) {
                time = (int) Math.round((fetchTime(src, stationsBus3bis.get(bis).coordonnees) * 60));
                g.addEdge(source, g.getVertices().get(compteur), time);
                time = (int) Math.round((fetchTime(dst, stationsBus3bis.get(bis).coordonnees) * 60));
                g.addEdge(destination, g.getVertices().get(compteur), time);
                bis++;
            }*/


linear_steps.removeAllViewsInLayout();
            for (int i = 0; i < result.size() - 1; i++) {
                if (result.get(i).type.equals("tramway")) {
                    addPin(result.get(i).coordonnees, result.get(i).nomFr + " to \n" + result.get(i + 1).nomFr + ":\n" + (int) Math.round(g.cost(g, path.get(i + 1), path.get(i + 2))), "tramway");
                    TextView txt = (TextView) View.inflate(this, R.layout.step, null);
                    txt.setText(result.get(i).nomFr + " to " + result.get(i + 1).nomFr + ": " + (int) Math.round(g.cost(g, path.get(i + 1), path.get(i + 2))) + "\n");
                    linear_steps.addView(txt);
                } else {
                    addPin(result.get(i).coordonnees, result.get(i).nomFr + ", " + removeFromStart(result.get(i).numero) + " to \n" + result.get(i + 1).nomFr + ":\n" + (int) Math.round(g.cost(g, path.get(i + 1), path.get(i + 2))), "bus");
                    TextView txt = (TextView) View.inflate(this, R.layout.step, null);
                    txt.setText(result.get(i).nomFr + " " + removeFromStart(result.get(i).numero) + " to " + result.get(i + 1).nomFr + " " + removeFromStart(result.get(i+1).numero) + ": " + (int) Math.round(g.cost(g, path.get(i + 1), path.get(i + 2))) + "\n");
                    linear_steps.addView(txt);
                }
            }


        Marker marker = new Marker(myMap);
        marker.setDraggable(true);
        marker.setPosition(defaultLocation);
        marker.setAnchor((float) 0.5, (float) 0.5);
        marker.setIcon(getApplicationContext().getDrawable(R.drawable.marker_source));
        myMap.getOverlays().add(marker);
        Overlay mOverlay = new Overlay() {

            @Override
            public boolean onScroll(MotionEvent pEvent1, MotionEvent pEvent2, float pDistanceX, float pDistanceY, MapView pMapView) {

                marker.setPosition(new GeoPoint((float) pMapView.getMapCenter().getLatitude(),
                        (float) pMapView.getMapCenter().getLongitude()));
                Log.d("MarkerPosition",marker.getPosition()+"");

                return super.onScroll(pEvent1, pEvent2, pDistanceX, pDistanceY, pMapView);
            }
        };
        myMap.getOverlays().add(mOverlay);